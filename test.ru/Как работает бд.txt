-База данных - test_db

 -Таблица articles
  -Поле - уникальный идентификатор статьи - id
  -Поле - название статьи - title
  -Поле - текст статьи - text
  -Поле - категория статьи - articles_categories_id
  -Поле - дата публикации, pubdate
  -Поле - кол-во просмотров статьи, views


 -Таблица articles_categories
  -id
  -Поле - название категории


 -Таблица comments
  -id
  -Поле - Автор комментария - author
  -Поле - Текст комментария - text
  -Поле - Дата публикации комментария - pubdate
  -Поле - К какой статье опубликован комменарий - articles_id


Для поля id ставим тип INT, длину ставим 11 (т.е., кол-во знаков в поле, т.е. 99999999999) и индекс ставим Primary для того,
чтобы индекс был уникальным всегда. И галочку на колонку A-I, т.е., автоинкремент. Счетчик будет сам увеличиваться

Для поля title будет указывать VARCHAR (до 255 символов). Можно поле TEXT, но оно используется для больших текстов. Для названия статьи 
столько не нужно

Для поля text выбираем TEXT


4 основные операции с майскл - C.R.U.D(CRUD):
-CREATE
-READ
-UPDATE
-DELETE

Команда добавления INSERT

INSERT INTO `куда вставлять` (`поле`, `поле`, `поле`, `поле`) VALUES ('значение', 'значение', 'значение', 'значение')

Команда чтения SELECT. Звёздочка * - все поля

SELECT указать поле, или несколько полей через запятую или звёздочку для выбора всего FROM `откуда` 

Так же, можно делать выборочный поиск с оператором WHERE

SELECT * from `articles` WHERE `title` = 'Охота на медведя'
Выбрать всё из таблицы articles где title равен Охота на медведя

Ещё можно использовать и знаки сравнения

SELECT * from `articles` WHERE `views` < 100

Можно сделать сортировку с командой ORDER BY

SELECT * FROM `articles` ORDER BY `views`
Выбери всё из articles и отсортируй по views (будет по возрастанию)

если добавить после запроса команду DESC, то отсортируется по убыванию
SELECT * FROM `articles` ORDER BY `views` DESC

если добавить команду LIMIT, то в выборку упадут не все, что найдено, а указанное кол-во. 
Указывается start и limit
start - показывает, откуда начинать (откуда пропустить)
limit - показывает, сколько нужно показать
SELECT * FROM `articles` ORDER BY `views` DESC LIMIT 2,10 

При сортировках сначала указывается WHERE, затем ORDER BY, потом LIMIT


Запрос на обновление UPDATE

UPDATE `articles` SET `title` = 'План питания для эффективного похудения' WHERE `id`=2

Обновить `таблицу` установить `ячейку` на 'такую-то' ячейку. Если не указать WHERE, то установится всем. Поэтому указываем `id` = 2. 
Т.е., выбираем только тот тайтл, который содержит ид = 2

UPDATE `articles` SET `views` = '42' WHERE `views`='32'

Обновили таблицу articles и установили поле views на 42, только там, где views = 32. Можно сделать и математические операции:
UPDATE `articles` SET `views` = `views` + 1 WHERE `views`='32'

Можно обновить сразу несколько полей
UPDATE `articles` SET `title` = 'План питания для эффективного похудения', `views` = `views` + 1 WHERE `id` = 2

Просто перечислить параметры для обновления через запятую, а затем указать поле-селектор WHERE


Удаление DELETE

DELETE FROM `articles` WHERE `id` = 7;
Здесь удалится запись с ид 7 из articles. Если не указывать WHERE и условие, то удалится вся таблица articles.

Если нужно удалить сразу несколько записей, можно написать:
DELETE FROM `articles` WHERE `id` = 8 OR `id` = 9;

как итог - удалились записи с ид 8 и 9, потому что обе записи были в таблице. Т.е., выбирает или 8, или 9, или обе, если обе есть.
Можно удалить И 8 И 9 запись через оператор AND

Через логические операторы можно указать и несколько условий:
DELETE FROM `articles` WHERE `id` = 8 OR `views` = 0;
DELETE FROM `articles` WHERE `id` = 8 AND`views` = 0;

DELETE FROM `articles` WHERE `title` = 'test' OR `views` = 0
удалить оттуда, если тайтл test или 0 просмотров